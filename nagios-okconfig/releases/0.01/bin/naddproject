#!/usr/bin/perl

use strict;
use Cwd;

if (@ARGV != 2) {
	print STDERR "Usage: $0 <project> \"<project description>\"\n";
	exit 1;
}
my $project = $ARGV[0];
my $project_desc = $ARGV[1];

if (-e "$project") {
	print STDERR "Project directory $project already exists\n";
	exit 1;
}

mkdir $project or
	die "Unable to create project directory: $!";
mkdir "$project/dev" or
	die "Unable to create development project directory \"$project/dev\": $!";

mkdir "$project/prod" or
	die "Unable to create production project directory \"$project/prod\": $!";

open CG, ">$project/contactgroups.cfg" or
	die "Unable to create $project/contactgroups.cfg: $!";

print CG <<EO;
define contactgroup {
	contactgroup_name		$project-prod-admins
	alias				$project_desc Production Administrators
	members				nagiosadmin
}

define contactgroup {
	contactgroup_name		$project-dev-admins
	alias				$project_desc Development Administrators
	members				nagiosadmin
}

define contactgroup {
	contactgroup_name		$project-admins
	alias				$project_desc Administrators
	members				nagiosadmin
}
EO
close CG;

open HG, ">$project/hostgroups.cfg" or
	die "Unable to create $project/hostgroups.cfg: $!";

print HG <<EO;
define hostgroup {
        hostgroup_name  $project-servers
        alias           $project_desc Servers
}

define hostgroup {
        hostgroup_name  $project-prod-servers
        alias           $project_desc Production Servers
}

define hostgroup {
        hostgroup_name  $project-dev-servers
        alias           $project_desc Development Servers
}
EO
close HG;

open S, ">$project/services.cfg" or
	die "Unable to create $project/services.cfg: $!";
print S<<EO;
define service {
        name  		check-generic-$project-services

	register 	0
}

define service {
        name  		check-generic-$project-dev-services
	use		check-generic-$project-services

	register 	0
}

define service {
        name  		check-generic-$project-prod-services
	use		check-generic-$project-services

	register 	0
}

EO
close S;

open H, ">$project/hosts.cfg" or
	die "Unable to create $project/hosts.cfg: $!";
print H<<EO;
define host {
        name  		generic-$project-server

	register 	0
}

define host {
        name  		generic-$project-server-prod
        use  		generic-$project-server

	register 	0
}

define host {
        name  		generic-$project-server-dev
        use  		generic-$project-server

	register 	0
}

EO
close H;

open SG, ">$project/servicegroup.cfg" or
	die "Unable to create $project/servicegroup.cfg: $!";
print SG<<EO;
define servicegroup {
        servicegroup_name  $project
        alias           $project_desc
}

define servicegroup {
        servicegroup_name  $project-prod
        alias           $project_desc Production
}

define servicegroup {
        servicegroup_name  $project-dev
        alias           $project_desc Development
}

EO
close SG;
