
# ARG1 = snmp community
# ARG2 = warning (80,80,80)
# ARG3 = critical (80,80,80)
define command {
        command_name            check_cisco_cpu
        command_line            $USER1$/ok/check_snmp_load.pl -H $HOSTADDRESS$ -C "$_SERVICESNMP_COMMUNITY$" -f -T $_SERVICECISCO_TYPE$ -w "$_SERVICEWARNING$" -c "$_SERVICECRITICAL$"
}


define command {
	command_name		check_cisco_mem
	command_line		$USER1$/ok/check_snmp_mem.pl -H $HOSTADDRESS$ -C "$_SERVICESNMP_COMMUNITY$" -I -f -w "$_SERVICEWARNING$" -c "$_SERVICECRITICAL$"
}


define command {
	command_name		check_cisco_env
	command_line		$USER1$/ok/check_snmp_env.pl -H $HOSTADDRESS$ -C "$_SERVICESNMP_COMMUNITY$" -T cisco -f 
}


define command {
        command_name            check_cisco_int
        command_line            perl $USER1$/ok/check_snmp_int.pl -H $HOSTADDRESS$ -C "$ARG1$" -n $ARG2$ $ARG3$
}


# -g = pix|ios|asa
define command {
	command_name		cisco-check_snmp_patchlevel
	command_line		$USER1$/ok/check_snmp_patchlevel.pl -H $HOSTADDRESS$ -g "$ARG1$" -C "$_SERVICESNMP_COMMUNITY$"
}


define command {
	command_name		cisco-check_vpn_sessions
	command_line		$USER1$/check_snmp -H $HOSTADDRESS$ -C $ARG1$ -o 1.3.6.1.4.1.9.9.392.1.3.1.0 -P 2c -l "Active VPN Connections" -w $ARG2$ -c $ARG3$
}
