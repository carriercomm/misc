#!/bin/sh

# Changelog:
# Version 1.1 Added --parent option
# 

VERSION=1.1
TEMPLATE=/etc/nagios/okconfig/examples/group.cfg-example
DEST_DIRECTORY=/etc/nagios/okconfig/hosts
DEFAULT_MEMBERGROUPS=admins

print_help() {
      echo "addgroup version $VERSION"
      echo "Usage: $0 <--group GROUPNAME> [--alias <alias>]"
      echo ""
      echo "Example: Add a mailserver group"
      echo "# addgroup --group mailservers --alias \"My Mailservers\""
}

if [ $# -eq 0 ]; then
     print_help ;
     exit 1
fi


test -d $DEST_DIRECTORY || mkdir -p $DEST_DIRECTORY
# Parse arguments
while [ $# -gt 0 ]
do
  case $1
  in
    --force)
	FORCE="--force"
	shift 1
    ;;
    --alias)
	alias=$2
	shift 2;
    ;;
    --group)
	group=$2
	shift 2;
    ;;
    --help)
	print_help;
	exit 0;
    ;;
    *)
	print_help;
	exit 1;
    ;;
  esac
done

if [ -z "$group" ]; then
	echo "Error: --group was not specified" >&2
	exit 1
fi

# If alias not specified, it gets the same name as group
if [ -z "$alias" ]; then
	alias=$group
fi

#DEST_DIRECTORY=$DEST_DIRECTORY/$group
#mkdir -p $DEST_DIRECTORY
DESTINATION="$DEST_DIRECTORY/$group.cfg"

if [ -z "$FORCE" ]; then
	# Abort if destination file already exists
	if [ -f $DESTINATION ]; then
		echo "ERROR: File $DESTINATION already exists. Use --force to overwrite" >&2
		exit 1
	fi
	# Abort if group already exists in Nagios
	for i in service_group contact_group contactgroup host_group ; do
		grep $i /var/log/nagios/objects.cache | awk '{ print $2 }' | grep -q -w $group
		RESULT=$?
		if [ $RESULT -eq 0 ]; then
			echo "ERROR: $i $group already exists in nagios configuration. Use --force to write config anyway" >&2
			exit 1
		fi
	done
fi

cat $TEMPLATE | sed "s/ALIAS/$alias/g" | sed "s/GROUP/$group/g" > $DESTINATION
echo "Group $group successfully created at $DESTINATION"
